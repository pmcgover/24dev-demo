DROP TABLE if exists tst_family CASCADE;
DROP TABLE if exists tst_plant CASCADE;
DROP TABLE if exists tst_pedigree CASCADE;
DROP TABLE if exists ptst_family CASCADE;
DROP TABLE if exists ptst_plant CASCADE;
DROP TABLE if exists ptst_pedigree CASCADE;

CREATE TABLE ptst_family (  
  id serial,
  family_key VARCHAR(20) UNIQUE,
  female_plant_id INTEGER NOT NULL DEFAULT 1,  
  male_plant_id INTEGER NOT NULL DEFAULT 1,  
  is_root VARCHAR NOT NULL DEFAULT '0', 
  --is_root INTEGER NOT NULL DEFAULT -1,  -- eg 0,1,2...  Which would represent None, F1, F2...
  CONSTRAINT family_pk PRIMARY KEY (id)
);

CREATE TABLE ptst_plant (
  id serial,
  plant_key VARCHAR(20) UNIQUE,
  id_family INTEGER NOT NULL,  
  CONSTRAINT plant_pk PRIMARY KEY (id),
  CONSTRAINT plant_id_family_fk FOREIGN KEY(id_family) REFERENCES ptst_family(id) 
);

CREATE TABLE ptst_pedigree (
id serial,
pedigree_key VARCHAR NOT NULL,
path VARCHAR NOT NULL UNIQUE
);

-- FAMILY Table DATA:
insert into ptst_family (id, family_key, female_plant_id, male_plant_id, is_root) VALUES (1,'N/A',1,1,'N'); -- Default place holder Family record
insert into ptst_family (id, family_key, female_plant_id, male_plant_id, is_root) VALUES (2,'10XGA91',3,4,'Y');
--------------------
-- PLANT Table DATA:
-- Root level Alba Parents:
insert into ptst_plant (id, plant_key,  id_family) VALUES (1,'N/A',1);  -- Default place holder Plant record
-- Root level PTST pedigree Parents:
insert into ptst_plant (id, plant_key,  id_family) VALUES (2,'BT044',1);   
insert into ptst_plant (id, plant_key,  id_family) VALUES (3,'A546',1);   

-- Below is the desired linear output for the above data:
--F1 family1AA=(female1A x male1A) > F2 family4AE=(female4A x male1E) > F3 family7AEAG=(female1AE x male1AG) > F4 family8AEAGAT=(female1AEAG x male1AT)  
--F1 family2AA=(female2A x male2A) > F2 family5AG=(female5A x male1G) > F3 family7AEAG=(female1AE x male1AG) > F4 family8AEAGAT=(female1AEAG x male1AT)
--F1 family3AA=(female3A x male3A) > F2 family6AT=(female6A x female1T) > F3 family8AEAGAT=(female1AEAG x male1AT)
--F1 family3AA=(female3A x male3A) > F2 family66AT=(female6A x female1T)

